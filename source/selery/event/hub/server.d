/*
 * Copyright (c) 2017-2019 sel-project
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 */
/**
 * Copyright: Copyright (c) 2017-2019 sel-project
 * License: MIT
 * Authors: Kripth
 * Source: $(HTTP github.com/sel-project/selery/source/selery/event/hub/server.d, selery/event/hub/server.d)
 */
module selery.event.hub.server;

import selery.event.event : Event;
import selery.hub.server : HubServer;
import selery.log : Message;

/**
 * Base class for every event that is triggered by the hub server.
 */
abstract class HubServerEvent : Event {
	
	private shared HubServer _server;
	
	public this(shared HubServer server) pure nothrow @safe @nogc {
		this._server = server;
	}

	/**
	 * Gets the hub server that has triggered the event.
	 */
	public final @property shared(HubServer) server() pure nothrow @safe @nogc {
		return this._server;
	}
	
}

/**
 * Event called when a message is logged to the console.
 */
class LogEvent : HubServerEvent {

	private Message[] _messages;
	int _commandId;
	int _worldId;

	public this(shared HubServer server, Message[] messages, int commandId, int worldId) pure nothrow @safe @nogc {
		super(server);
		_messages = messages;
		_commandId = commandId;
		_worldId = worldId;
	}

	/**
	 * Gets the log's message.
	 */
	public final @property Message[] messages() pure nothrow @safe @nogc {
		return _messages;
	}

	/**
	 * Gets the command id, if the log is the result of an input given by
	 * an external application. Returns -1 if the log was not genearated by
	 * an external input.
	 */
	public final @property int commandId() pure nothrow @safe @nogc {
		return _commandId;
	}

	/**
	 * Gets the id of the world that has generated the log or -1 if the log
	 * was not generated by a world.
	 */
	public final @property int worldId() pure nothrow @safe @nogc {
		return _worldId;
	}

}
